<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Today-I-Learned on </title>
    <link>https://poorlydefinedbehaviour.github.io/categories/today-i-learned/</link>
    <description>Recent content in Today-I-Learned on </description>
    <image>
      <title></title>
      <url>https://poorlydefinedbehaviour.github.io/papermod-cover.png</url>
      <link>https://poorlydefinedbehaviour.github.io/papermod-cover.png</link>
    </image>
    <generator>Hugo -- 0.129.0</generator>
    <language>en</language>
    <lastBuildDate>Tue, 08 Aug 2023 00:00:00 -0300</lastBuildDate>
    <atom:link href="https://poorlydefinedbehaviour.github.io/categories/today-i-learned/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Notes on formal languages: alphabets, strings and languages</title>
      <link>https://poorlydefinedbehaviour.github.io/posts/formal_languages_alphabet_strings_and_languages/</link>
      <pubDate>Tue, 08 Aug 2023 00:00:00 -0300</pubDate>
      <guid>https://poorlydefinedbehaviour.github.io/posts/formal_languages_alphabet_strings_and_languages/</guid>
      <description>An alphabet is any set of finite symbols such as a and b. For example, the alphabet Σ = {a, b} is an alphabet that contains the strings that can be built by combining a and b and the alphabet Σ = {0, 1} is the an alphabet that contains the strings that can be built by combining 0 and 1.
Symbols such as a and b put together to form something like bbaa are called strings.</description>
    </item>
    <item>
      <title>Token bucket</title>
      <link>https://poorlydefinedbehaviour.github.io/posts/token_bucket/</link>
      <pubDate>Sun, 20 Mar 2022 22:21:07 -0300</pubDate>
      <guid>https://poorlydefinedbehaviour.github.io/posts/token_bucket/</guid>
      <description>Intro Token bucket is an algorithm that can be used to rate limit requests made or received by a service.
How it works The algorithm is called token bucket because of the way it works: imagine we have a bucket with x tokens where each accepted request consumes one token from the bucket and a token is added back to the bucket at an interval.
A bucket with 1 token that is refilled each second means the service accepts one request per second.</description>
    </item>
    <item>
      <title>Notes taken from the Raft paper</title>
      <link>https://poorlydefinedbehaviour.github.io/posts/raft_notes/</link>
      <pubDate>Fri, 04 Mar 2022 17:48:19 -0300</pubDate>
      <guid>https://poorlydefinedbehaviour.github.io/posts/raft_notes/</guid>
      <description>Replicated And Fault Tolerant Raft is a consensus algorithm for managing a replicated log.
The authors claim Raft to be more understandable than Paxos because Raft separates the key elements of consensus
Leader election Log replication Safety and enforces a stronger degree of coherency to reduce the number of states that must be considered.
Raft also includes a new mechanism for changing cluster membership.
What is a consensus algorithm Consensus algorithms allow a collection of machines to work as a coherent group that can survive the failures of some of its members.</description>
    </item>
    <item>
      <title>Bloom filter</title>
      <link>https://poorlydefinedbehaviour.github.io/posts/bloom_filter/</link>
      <pubDate>Thu, 03 Mar 2022 20:56:31 -0300</pubDate>
      <guid>https://poorlydefinedbehaviour.github.io/posts/bloom_filter/</guid>
      <description>What&amp;rsquo;s a Bloom filter A bloom filter is a data-structure that can be used to check if a set contains an element. It uses way less memory than a conventional set data-structure by sacrificing accuracy.
Example Say we are building a log-structured merge-tree, we can use a bloom filter to find out if the LSM-tree contains a particular key in O(1) time in most cases, the downside is that sometimes the bloom filter would say that the LSM-tree contains a key, but it actually does not and we would go searching for the value that&amp;rsquo;s mapped to the key and never actually find it.</description>
    </item>
  </channel>
</rss>
