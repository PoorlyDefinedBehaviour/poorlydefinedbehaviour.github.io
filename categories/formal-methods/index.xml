<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Formal Methods on </title>
    <link>https://poorlydefinedbehaviour.github.io/categories/formal-methods/</link>
    <description>Recent content in Formal Methods on </description>
    <image>
      <title></title>
      <url>https://poorlydefinedbehaviour.github.io/papermod-cover.png</url>
      <link>https://poorlydefinedbehaviour.github.io/papermod-cover.png</link>
    </image>
    <generator>Hugo -- 0.132.1</generator>
    <language>en</language>
    <lastBuildDate>Thu, 15 Aug 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://poorlydefinedbehaviour.github.io/categories/formal-methods/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Model checking the deadlock empire</title>
      <link>https://poorlydefinedbehaviour.github.io/posts/the_deadlock_empire_tla/</link>
      <pubDate>Thu, 15 Aug 2024 00:00:00 +0000</pubDate>
      <guid>https://poorlydefinedbehaviour.github.io/posts/the_deadlock_empire_tla/</guid>
      <description>Non atomic instructions
There&amp;rsquo;s two threads executing the following code:
a = a + 1; if (a == 1) { critical_section(); } Since the a increment is not atomic, conceptually, it is like setting a temporary variable to the value of a&amp;ndash; tmp = a and then setting a to the temporary variable value incremented by 1 &amp;ndash; a = tmp + 1.
---- MODULE spec ---- EXTENDS TLC, Integers, FiniteSets (*--algorithm spec variables a = 0, threads = 1.</description>
    </item>
  </channel>
</rss>
